/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendence.management.system;

import javax.swing.JFrame;
import Classes.DaytoDatelinker;
import Classes.Connection2DB;
import java.awt.Color;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import java.awt.Color;

/**
 *
 * @author AKHIL REJI
 */
public class AttendanceForm extends javax.swing.JFrame implements WindowListener {

    /**
     * Creates new form AttendanceForm
     */
    public AttendanceForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        addWindowListener(this);
        getRootPane().setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreafull = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreahalf = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jComboBoxdate = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jButtonview = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jComboBoxyear = new javax.swing.JComboBox<>();
        jComboBoxsem = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jTextrollno = new javax.swing.JTextField();
        jButtonadd = new javax.swing.JButton();
        jCheckBoxpresent = new javax.swing.JCheckBox();
        jLabels2 = new javax.swing.JLabel();
        jButtongo = new javax.swing.JButton();
        a = new javax.swing.JCheckBox();
        f = new javax.swing.JCheckBox();
        e = new javax.swing.JCheckBox();
        b = new javax.swing.JCheckBox();
        c = new javax.swing.JCheckBox();
        d = new javax.swing.JCheckBox();
        jLabels1 = new javax.swing.JLabel();
        jLabels3 = new javax.swing.JLabel();
        jLabels4 = new javax.swing.JLabel();
        jLabels5 = new javax.swing.JLabel();
        jLabels6 = new javax.swing.JLabel();
        jButtonsave = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabelattendance2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabelattendance1 = new javax.swing.JLabel();
        jLabeloverview = new javax.swing.JLabel();
        jLabelattendance = new javax.swing.JLabel();
        jLabelabout = new javax.swing.JLabel();
        jLabelstudent = new javax.swing.JLabel();
        jLabelsubject = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        minimize = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabelsignout = new javax.swing.JLabel();
        jLabelattendance3 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabellogin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1290, 630));

        jPanel1.setBackground(new java.awt.Color(1, 22, 39));

        jPanel2.setBackground(new java.awt.Color(220, 220, 220));

        jPanel3.setBackground(new java.awt.Color(1, 22, 39));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(234, 240, 241));
        jLabel1.setText("Dashboard");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(51, 101, 138));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 0, true));
        jPanel4.setPreferredSize(new java.awt.Dimension(1280, 640));

        jPanel8.setBackground(new java.awt.Color(1, 22, 39));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(234, 240, 241));
        jLabel11.setText("Full Day:");

        jTextAreafull.setBackground(new java.awt.Color(108, 122, 137));
        jTextAreafull.setColumns(20);
        jTextAreafull.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextAreafull.setForeground(new java.awt.Color(255, 255, 255));
        jTextAreafull.setRows(5);
        jScrollPane2.setViewportView(jTextAreafull);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(234, 240, 241));
        jLabel9.setText("Half Day:");

        jTextAreahalf.setBackground(new java.awt.Color(108, 122, 137));
        jTextAreahalf.setColumns(20);
        jTextAreahalf.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextAreahalf.setForeground(new java.awt.Color(255, 255, 255));
        jTextAreahalf.setRows(5);
        jScrollPane3.setViewportView(jTextAreahalf);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(234, 240, 241));
        jLabel17.setText("Select Date:");

        jComboBoxdate.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jComboBoxdate.setMaximumRowCount(3);
        jComboBoxdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Today" }));
        jComboBoxdate.setToolTipText("");
        jComboBoxdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxdateMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel11))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jLabel9))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(1, 22, 39));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(234, 240, 241));
        jLabel16.setText("Select Year:");

        jButtonview.setBackground(new java.awt.Color(0, 102, 255));
        jButtonview.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonview.setForeground(new java.awt.Color(255, 255, 255));
        jButtonview.setText("View");
        jButtonview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonviewMouseClicked(evt);
            }
        });
        jButtonview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonviewActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(234, 240, 241));
        jLabel20.setText("Select Semester:");

        jComboBoxyear.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jComboBoxyear.setMaximumRowCount(3);
        jComboBoxyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1st year", "2nd year", "3ed year" }));
        jComboBoxyear.setToolTipText("");

        jComboBoxsem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jComboBoxsem.setMaximumRowCount(3);
        jComboBoxsem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1st semester", "2nd semester" }));
        jComboBoxsem.setToolTipText("");
        jComboBoxsem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jComboBoxsemMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jComboBoxsemMouseReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(234, 240, 241));
        jLabel21.setText("Roll No:");

        jTextrollno.setBackground(new java.awt.Color(108, 122, 137));
        jTextrollno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextrollno.setForeground(new java.awt.Color(228, 241, 254));
        jTextrollno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextrollno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextrollnoMouseReleased(evt);
            }
        });
        jTextrollno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextrollnoActionPerformed(evt);
            }
        });

        jButtonadd.setBackground(new java.awt.Color(0, 102, 255));
        jButtonadd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonadd.setForeground(new java.awt.Color(255, 255, 255));
        jButtonadd.setText("Submit");
        jButtonadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonaddMouseClicked(evt);
            }
        });
        jButtonadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddActionPerformed(evt);
            }
        });

        jCheckBoxpresent.setBackground(new java.awt.Color(1, 22, 39));
        jCheckBoxpresent.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jCheckBoxpresent.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxpresent.setText("Want to report absent?click here");
        jCheckBoxpresent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxpresentActionPerformed(evt);
            }
        });

        jLabels2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabels2.setForeground(new java.awt.Color(234, 240, 241));

        jButtongo.setBackground(new java.awt.Color(51, 102, 0));
        jButtongo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtongo.setForeground(new java.awt.Color(255, 255, 255));
        jButtongo.setText("Go");
        jButtongo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtongoMouseClicked(evt);
            }
        });
        jButtongo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongoActionPerformed(evt);
            }
        });

        a.setBackground(new java.awt.Color(1, 22, 39));
        a.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        a.setForeground(new java.awt.Color(255, 255, 255));
        a.setText("1");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        f.setBackground(new java.awt.Color(1, 22, 39));
        f.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        f.setForeground(new java.awt.Color(255, 255, 255));
        f.setText("6");

        e.setBackground(new java.awt.Color(1, 22, 39));
        e.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        e.setForeground(new java.awt.Color(255, 255, 255));
        e.setText("5");

        b.setBackground(new java.awt.Color(1, 22, 39));
        b.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        b.setForeground(new java.awt.Color(255, 255, 255));
        b.setText("2");

        c.setBackground(new java.awt.Color(1, 22, 39));
        c.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        c.setForeground(new java.awt.Color(255, 255, 255));
        c.setText("3");

        d.setBackground(new java.awt.Color(1, 22, 39));
        d.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        d.setForeground(new java.awt.Color(255, 255, 255));
        d.setText("4");

        jLabels1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabels1.setForeground(new java.awt.Color(234, 240, 241));

        jLabels3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabels3.setForeground(new java.awt.Color(234, 240, 241));

        jLabels4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabels4.setForeground(new java.awt.Color(234, 240, 241));

        jLabels5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabels5.setForeground(new java.awt.Color(234, 240, 241));

        jLabels6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabels6.setForeground(new java.awt.Color(234, 240, 241));

        jButtonsave.setBackground(new java.awt.Color(51, 102, 0));
        jButtonsave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonsave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonsave.setText("Complete");
        jButtonsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonsaveMouseClicked(evt);
            }
        });
        jButtonsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jCheckBoxpresent, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabels6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabels5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabels4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabels3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabels2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabels1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(jTextrollno, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtongo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jButtonadd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jButtonsave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonview, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxyear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxsem, 0, 228, Short.MAX_VALUE))
                                .addGap(50, 50, 50)))))
                .addGap(61, 61, 61))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxyear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(10, 10, 10)
                        .addComponent(jComboBoxsem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtongo)
                    .addComponent(jLabel21)
                    .addComponent(jTextrollno, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a)
                    .addComponent(jLabels1))
                .addGap(3, 3, 3)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b)
                    .addComponent(jLabels2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c)
                    .addComponent(jLabels3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d)
                    .addComponent(jLabels4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(e)
                    .addComponent(jLabels5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f)
                    .addComponent(jLabels6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jCheckBoxpresent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonview)
                    .addComponent(jButtonadd)
                    .addComponent(jButtonsave))
                .addGap(19, 19, 19))
        );

        jPanel6.setBackground(new java.awt.Color(153, 0, 0));

        jLabelattendance2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelattendance2.setForeground(new java.awt.Color(234, 240, 241));
        jLabelattendance2.setText("Preview");
        jLabelattendance2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelattendance2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelattendance2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabelattendance2)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(153, 0, 0));

        jLabelattendance1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelattendance1.setForeground(new java.awt.Color(234, 240, 241));
        jLabelattendance1.setText("Individual");
        jLabelattendance1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelattendance1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelattendance1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabelattendance1)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jLabeloverview.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabeloverview.setForeground(new java.awt.Color(234, 240, 241));
        jLabeloverview.setText("Overview     ");
        jLabeloverview.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabeloverview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabeloverviewMouseClicked(evt);
            }
        });

        jLabelattendance.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelattendance.setForeground(new java.awt.Color(234, 240, 241));
        jLabelattendance.setText("Attendance  ");
        jLabelattendance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelattendanceMouseClicked(evt);
            }
        });

        jLabelabout.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelabout.setForeground(new java.awt.Color(234, 240, 241));
        jLabelabout.setText("Admin Panel");
        jLabelabout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelaboutMouseClicked(evt);
            }
        });

        jLabelstudent.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelstudent.setForeground(new java.awt.Color(234, 240, 241));
        jLabelstudent.setText("Student       ");
        jLabelstudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelstudentMouseClicked(evt);
            }
        });

        jLabelsubject.setBackground(new java.awt.Color(89, 83, 134));
        jLabelsubject.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelsubject.setForeground(new java.awt.Color(234, 240, 241));
        jLabelsubject.setText("Subject       ");
        jLabelsubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelsubjectMouseClicked(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 159, 28));

        minimize.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        minimize.setForeground(new java.awt.Color(234, 240, 241));
        minimize.setText("-");
        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });

        exit.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        exit.setForeground(new java.awt.Color(234, 240, 241));
        exit.setText("x");
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimize)
                .addGap(3, 3, 3)
                .addComponent(exit)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minimize)
                    .addComponent(exit)))
        );

        jPanel9.setBackground(new java.awt.Color(153, 0, 0));

        jLabelsignout.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelsignout.setForeground(new java.awt.Color(234, 240, 241));
        jLabelsignout.setText("Logout");
        jLabelsignout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelsignoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabelsignout)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelsignout, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabelattendance3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabelattendance3.setForeground(new java.awt.Color(234, 240, 241));
        jLabelattendance3.setText("Login as");
        jLabelattendance3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelattendance3MouseClicked(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(0, 102, 0));

        jLabellogin.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabellogin.setForeground(new java.awt.Color(234, 240, 241));
        jLabellogin.setText("      ");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabellogin, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabellogin, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelattendance)
                            .addComponent(jLabeloverview)
                            .addComponent(jLabelstudent)
                            .addComponent(jLabelsubject)
                            .addComponent(jLabelabout)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelattendance3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1091, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabeloverview)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelattendance)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelstudent)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelsubject)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelabout)
                        .addGap(93, 93, 93)
                        .addComponent(jLabelattendance3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelattendanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelattendanceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelattendanceMouseClicked

    private void jLabelstudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelstudentMouseClicked
        // TODO add your handling code here:
         StudentForm stdf=new StudentForm();
        stdf.setVisible(true);
        stdf.pack();
        stdf.setLocationRelativeTo(null);//to make center on screen
        stdf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLabelstudentMouseClicked

    private void jLabelsubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelsubjectMouseClicked
        // TODO add your handling code here:
         SubjectForm subf=new SubjectForm();
        subf.setVisible(true);
        subf.pack();
        subf.setLocationRelativeTo(null);//to make center on screen
        subf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLabelsubjectMouseClicked

    private void jLabelaboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelaboutMouseClicked
Connection2DB C=new Connection2DB();
            Connection conn=C.setconnection();
            PreparedStatement st;
            int var=0;
         try {
             st = conn.prepareStatement("select * from Login");
              ResultSet rs = st.executeQuery();
              while(rs.next())
              {
                 var=rs.getInt("Verify");
                 if(var==7)
                 {
                     AboutForm abtf=new AboutForm();
        abtf.setVisible(true);
        abtf.pack();
        abtf.setLocationRelativeTo(null);//to make center on screen
        abtf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        break;
                 }
                 else
                 {
                     JOptionPane.showMessageDialog(null,"You're not autharised to acces this space!","Denied",JOptionPane.ERROR_MESSAGE );
                     break;
                 }
                 
              }
         } catch (SQLException ex) {
             Logger.getLogger(AboutForm.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jLabelaboutMouseClicked

    private void jLabeloverviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabeloverviewMouseClicked
        // TODO add your handling code here:
        DashboardForm dbf=new DashboardForm();
        dbf.setVisible(true);
        dbf.pack();
        dbf.setLocationRelativeTo(null);//to make center on screen
        dbf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLabeloverviewMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
 LogoutForm ltf=new LogoutForm();
        ltf.setVisible(true);
        ltf.pack();
        ltf.setLocationRelativeTo(null);//to make center on screen
        ltf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_exitMouseClicked

    private void jLabelattendance1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelattendance1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelattendance1MouseClicked

    private void jLabelattendance2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelattendance2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelattendance2MouseClicked

    private void jButtonviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonviewMouseClicked

        Connection2DB C=new Connection2DB();
        Connection conn=C.setconnection();
        jTextAreafull.setText("");
        jTextAreahalf.setText("");
        String date=(String) jComboBoxdate.getSelectedItem();
        String flag=null;
        String log=null;
        PreparedStatement stt;
        ResultSet rss,rs = null;
        int nok=0;
        String non=null;
        
        if(jComboBoxyear.getSelectedItem().equals("1st year"))
         {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {
                 
                 try {
                     log="11";
                 stt = conn.prepareStatement("select * from attendance11 ");
                 rss = stt.executeQuery();
                 while(rss.next())
                 {
                  if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;                    
                     }
                 
                 
                  
                 }

                    } 
                 catch (SQLException ex) {
                  Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
           }
           else
           {   
                                 
                                     try {
                                         
                                         log="12";
                                     stt = conn.prepareStatement("select * from attendance12");
                                     rss = stt.executeQuery();
                                     while(rss.next())
                                        {
                                          if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;                    
                     }
                 
                                        }
                                      

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
           }
           
       }
       if(jComboBoxyear.getSelectedItem().equals("2nd year"))
       {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {   
                                
                                     try {
                                         log="21";
                                     stt = conn.prepareStatement("select * from attendance21");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        {if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;                    
                     }
                 
                                        }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
              
           }
           else
           {   
                                 
                                     try {
                                         log="22";
                                     stt = conn.prepareStatement("select * from attendance22");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        {if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;                    
                     }
                 
                                        }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
               
               
           }
           
       }
       if(jComboBoxyear.getSelectedItem().equals("3ed year"))
       {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {     
                                 
                                     try {
                                         log="31";
                                     stt = conn.prepareStatement("select * from attendance31");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        {if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;                    
                     }
                 
                                        }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
               
           
           }
           else
           {  
                                 
                                     try {
                                         log="32";
                                     stt = conn.prepareStatement("select * from attendance32");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        {if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;                    
                     }
                  }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
           
           }
       }
       if(date.equals("Today"))
       {
           
       }
       else
       {
           nok=jComboBoxdate.getSelectedIndex();//need to add more cmd
           nok++;
           non=""+nok;
           flag=non;
       }
                 
                String item = null;
                
                
                    
                PreparedStatement pst = null;
                ResultSet rst=null;
                
                String sql;
                sql="SELECT * FROM Attendance"+log+"";
                            
                       try {pst = conn.prepareStatement(sql);
                           
                           rst = pst.executeQuery();
                            
                            while(rst.next())
                            {
                                if ( rst.getString("Day"+flag).equals("111110") || rst.getString("Day"+flag).equals("111101")|| rst.getString("Day"+flag).equals("111011")|| rst.getString("Day"+flag).equals("110111")|| rst.getString("Day"+flag).equals("101111")|| rst.getString("Day"+flag).equals("011111")|| rst.getString("Day"+flag).equals("111111") )
                                    
                {   
                    
                    item=rst.getString("ROLL_NO");
                    if(jTextAreafull.getText().equals(""))
                    {
                    jTextAreafull.setText(item);
                    }
                    else
                    {
                    jTextAreafull.setText(jTextAreafull.getText()+","+item);
                    }
                } 
                                else{
                                    switch(rst.getString("Day"+flag))
                                    {
                                        case "000000":
                                        case "100000":
                                        case "010000":
                                        case "001000":
                                        case "000100":
                                        case "000010":
                                        case "000001":
                                        case "110000":
                                        case "101000":
                                        case "100100":
                                        case "100010":
                                        case "100001":
                                        case "011000":
                                        case "010100":
                                        case "010010":
                                        case "010001":
                                        case "001100":
                                        case "001010":
                                        case "001001":
                                        case "000110":
                                        case "000101":
                                        case "000011":jTextAreahalf.setText("");
                                        break;
                                        
                                        
                                        default:
                                            
                                        {   item=rst.getString("ROLL_NO");
                    if(jTextAreahalf.getText().equals(""))
                    {
                    jTextAreahalf.setText(item);
                    }
                    else
                    {
                    jTextAreahalf.setText(jTextAreahalf.getText()+","+item);
                    }
                                    }                   
                                        
                                        
                                    }
                                    
                                    
                                    
                                    }                
                                
                                
                            }
                          
                            
                            
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
                        
           
            
            
       
            
    }//GEN-LAST:event_jButtonviewMouseClicked

    private void jButtonviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonviewActionPerformed

    private void jTextrollnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextrollnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextrollnoActionPerformed

    private void jButtonaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonaddMouseClicked
      
        Connection2DB C=new Connection2DB();
        Connection conn=C.setconnection();
        Statement st=null;
        ResultSet rs=null;
        String no=jTextrollno.getText();
        String flag=null;
        String flags=null;
        String log=null;
        PreparedStatement stt;
        ResultSet rss;
        int k=0;
                
        int nok=0;
        String non=null;
        
        if(jComboBoxyear.getSelectedItem().equals("1st year"))
         {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {
                 
                 try {
                     log="11";
                 stt = conn.prepareStatement("select * from attendance11");
                 rss = stt.executeQuery();
                 while(rss.next())
                 {  if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                         flags=flag;
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;  
                        flags=rss.getString("FLAG");
                     }
                 
                 }

                    } 
                 catch (SQLException ex) {
                  Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
           }
           else
           {   
                                 
                                     try {
                                         
                                         log="12";
                                     stt = conn.prepareStatement("select * from attendance12");
                                     rss = stt.executeQuery();
                                     while(rss.next())
                                        { if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                         flags=flag;
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;  
                         flags=rss.getString("FLAG");
                     }
                
                 }
                                      

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
           }
           
       }
       if(jComboBoxyear.getSelectedItem().equals("2nd year"))
       {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {   
                                
                                     try {
                                         log="21";
                                     stt = conn.prepareStatement("select * from attendance21");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        { if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                         flags=flag;
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non; 
                         flags=rss.getString("FLAG");
                     }
                
                 }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
              
           }
           else
           {   
                                 
                                     try {
                                         log="22";
                                     stt = conn.prepareStatement("select * from attendance22");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        { if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                         flags=flag;
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;   
                         flags=rss.getString("FLAG");
                     }
                
                 }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
               
               
           }
           
       }
       if(jComboBoxyear.getSelectedItem().equals("3ed year"))
       {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {     
                                 
                                     try {
                                         log="31";
                                     stt = conn.prepareStatement("select * from attendance31");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        { if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                         flags=flag;
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;    
                         flags=rss.getString("FLAG");
                     }
                 
                 }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
               
           
           }
           else
           {  
                                 
                                     try {
                                         log="32";
                                     stt = conn.prepareStatement("select * from attendance32");
                                      rss = stt.executeQuery();
                                     while(rss.next())
                                        { if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                         flags=flag;
                     }
                     else
                     {  nok=jComboBoxdate.getSelectedIndex();
                        nok++;
                        non=""+nok;
                        flag=non;
                         flags=rss.getString("FLAG");
                     }
                 
                 }

                                     } catch (SQLException ex) {
                                      Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                     }
                
               
           
           }
           
       }
       k=jComboBoxdate.getItemCount();
       int foo = Integer.parseInt(flags);
    
    if(k>=foo)
    {
        if (JOptionPane.showConfirmDialog(null, "Do you want to add this day to attendance register?", "Day",
        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) 
        {
         String sqls=null;   
       while(foo<k)
       {
           foo++;
          sqls= "UPDATE attendance"+log+" SET Day"+foo+"=?";
          PreparedStatement psts;
          try {
                psts = conn.prepareStatement(sqls);
                psts.setString(1,"000000");
            
                psts.executeUpdate();  
            } catch (SQLException ex) {
                Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
        flags=""+k; 
           sqls="UPDATE attendance"+log+" SET FLAG=? ";
            PreparedStatement pst;
            try {
                pst = conn.prepareStatement(sqls);
                pst.setString(1,flags);
            
            
           
            pst.executeUpdate();  
            } catch (SQLException ex) {
                Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
       if(jTextrollno.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter Roll no!","Login System",JOptionPane.ERROR_MESSAGE );
        }
        else
        {
        
        
        
        try {
            st =(Statement)conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
               if(jCheckBoxpresent.isSelected())
                   
               {
                   
                     if(a.isSelected())
               {
                   if(b.isSelected())
                   {
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+"v SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   }
                   else
                   {
                       
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   
                       
                   }
               
                   
               }
                     else
                     {
                          if(b.isSelected())
                   {
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   }
                   else
                   {
                       
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE v SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   
                       
                   }
               
                   
               
                         
                     }
                
                      
       
           
                   
           
                 
            
               }
               else
               {
                     if(a.isSelected())
               {
                   if(b.isSelected())
                   {
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"111000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"110000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   }
                   else
                   {
                       
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"101000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"100000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   
                       
                   }
               
                   
               }
                     else
                     {
                         
                   if(b.isSelected())
                   {
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"011000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"010000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   }
                   else
                   {
                       
                       if(c.isSelected())
                       {
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"001000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       }
                       else
                       {
                           
                           if(d.isSelected())
                           {
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000111");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000110");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000101");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000100");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           }
                           else
                           {
                               
                               if(e.isSelected())
                               {
                                   if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000011");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000010");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                               }
                               else
                               {
                                 if(f.isSelected())
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000001");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }
                                   else
                                   {
                                        String sql;
                     sql="UPDATE attendance"+log+" SET DAY"+flag+" = ?  WHERE ROLL_NO= ?";
            PreparedStatement pst;
                       try {
                            pst = conn.prepareStatement(sql);
                            pst.setString(1,"000000");
                            pst.setString(2,no);
            
                            pst.executeUpdate();
                            }
                       catch (SQLException ex) {
                            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                                              }
            
            JOptionPane.showMessageDialog(null,"Done","Successfull",JOptionPane.ERROR_MESSAGE );
            
            jTextrollno.setText("");
                   
                                   }  
                               }
                           
                               
                           }
                           
                       
                       }
                       
                   
                       
                   }
               
                   
               
                     }
                
                      
       
           }
           
           } 
 
       
           
      
       
           
    }//GEN-LAST:event_jButtonaddMouseClicked

    private void jButtonaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonaddActionPerformed

    private void jButtongoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtongoMouseClicked
        
            
        Connection2DB C=new Connection2DB();
        DaytoDatelinker dt=new DaytoDatelinker();
        
        String flag=null;
        String log=null;
        int no=0;
        String non=null;
        a.setSelected(false);
        b.setSelected(false);
        c.setSelected(false);
        d.setSelected(false);
        e.setSelected(false);
        f.setSelected(false);
        
        
        if(jComboBoxsem.getSelectedItem().equals("1st semestere"))
        {
            try {
                dt.sem1();
            } catch (SQLException ex) {
                Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            try {
                dt.sem2();
            } catch (SQLException ex) {
                Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
         if(jTextrollno.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter Roll no!","Login System",JOptionPane.ERROR_MESSAGE );
        }
        else
        {
        

        if(jComboBoxyear.getSelectedItem().equals("1st year"))
        {
            if(jComboBoxsem.getSelectedItem().equals("1st semester"))
            {

                try 
                {
                    
                 
                  

                    Connection conn=C.setconnection();
                    PreparedStatement st,stt;
                    ResultSet rss;
                    log="11";
                    try {
                        stt = conn.prepareStatement("select * from attendance11 where roll_no=?");
                        stt.setString(1,jTextrollno.getText());
                         rss = stt.executeQuery();
                 while(rss.next())
                 {
                     if("Today".equals(jComboBoxdate.getSelectedItem()))
                     {
                         flag=rss.getString("FLAG");
                     }
                     else
                     {  no=jComboBoxdate.getSelectedIndex();
                        no++;
                        non=""+no;
                        flag=non;                    
                     }
                 log=rss.getString("DAY"+flag);
                 
                 }
                    } catch (SQLException ex) {
                        Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                

                    st = conn.prepareStatement("select * from subject where year = ? and  semester= ?  ");
                    st.setString(1, "1st year");
                    st.setString(2, "1st semester");

                    ResultSet rs = st.executeQuery();
                    while(rs.next())
                    {   if(rs.getString(6).equals("1"))
                    {
                        jLabels1.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels1.setText(sub);

                    }
                       if(rs.getString(6).equals("2"))
                    {
                        jLabels2.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels2.setText(sub);

                    }
                       if(rs.getString(6).equals("3"))
                    {
                        jLabels3.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels3.setText(sub);

                    }
                       if(rs.getString(6).equals("4"))
                    {
                        jLabels4.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels4.setText(sub);

                    }
                       if(rs.getString(6).equals("5"))
                    {
                        jLabels5.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels5.setText(sub);

                    }
                       if(rs.getString(6).equals("6"))
                    {
                        jLabels6.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels6.setText(sub);

                    }
                    
                  
                  
                    

                }
                }
                    catch (SQLException ex) {
                    Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            else
            {
                try {
                    

                     Connection conn=C.setconnection();
                    PreparedStatement st,stt;
                    ResultSet rss;
                    log="12";
                     try {
                        stt = conn.prepareStatement("select * from attendance12 where roll_no=?");
                        stt.setString(1,jTextrollno.getText());
                         rss = stt.executeQuery();
                 while(rss.next())
                 {
                 flag=rss.getString("FLAG");
                 log=rss.getString("DAY"+flag);
                 
                 }
                    } catch (SQLException ex) {
                        Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                    st = conn.prepareStatement("select * from subject where year = ? and  semester= ?  ");
                    st.setString(1, "1st year");
                    st.setString(2, "2nd semester");

                    ResultSet rs = st.executeQuery();
                    while(rs.next())
                    {   if(rs.getString(6).equals("1"))
                    {
                        jLabels1.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels1.setText(sub);

                    }
                       if(rs.getString(6).equals("2"))
                    {
                        jLabels2.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels2.setText(sub);

                    }
                       if(rs.getString(6).equals("3"))
                    {
                        jLabels3.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels3.setText(sub);

                    }
                       if(rs.getString(6).equals("4"))
                    {
                        jLabels4.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels4.setText(sub);

                    }
                       if(rs.getString(6).equals("5"))
                    {
                        jLabels5.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels5.setText(sub);

                    }
                       if(rs.getString(6).equals("6"))
                    {
                        jLabels6.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels6.setText(sub);

                    }
                    
                    
                    

                }
                }
                    catch (SQLException ex) {
                    Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
        if(jComboBoxyear.getSelectedItem().equals("2nd year"))
        {
            if(jComboBoxsem.getSelectedItem().equals("1st semester"))
            {

                try {
                    

                     Connection conn=C.setconnection();
                    PreparedStatement st,stt;
                    ResultSet rss;
                    log="21";
                     try {
                        stt = conn.prepareStatement("select * from attendance21 where roll_no=?");
                        stt.setString(1,jTextrollno.getText());
                         rss = stt.executeQuery();
                 while(rss.next())
                 {
                 flag=rss.getString("FLAG");
                 log=rss.getString("DAY"+flag);
                 
                 }
                    } catch (SQLException ex) {
                        Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                

                    st = conn.prepareStatement("select * from subject where year = ? and  semester= ?  ");
                    st.setString(1, "2nd year");
                    st.setString(2, "1st semester");

                    ResultSet rs = st.executeQuery();
                    while(rs.next())
                    {   if(rs.getString(6).equals("1"))
                    {
                        jLabels1.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels1.setText(sub);

                    }
                       if(rs.getString(6).equals("2"))
                    {
                        jLabels2.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels2.setText(sub);

                    }
                       if(rs.getString(6).equals("3"))
                    {
                        jLabels3.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels3.setText(sub);

                    }
                       if(rs.getString(6).equals("4"))
                    {
                        jLabels4.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels4.setText(sub);

                    }
                       if(rs.getString(6).equals("5"))
                    {
                        jLabels5.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels5.setText(sub);

                    }
                       if(rs.getString(6).equals("6"))
                    {
                        jLabels6.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels6.setText(sub);

                    }
                    
                    
                    

                }
                }
                    catch (SQLException ex) {
                    Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                try {
                    

                     Connection conn=C.setconnection();
                    PreparedStatement st,stt;
                    ResultSet rss;
                    log="22";
                     try {
                        stt = conn.prepareStatement("select * from attendance22 where roll_no=?");
                        stt.setString(1,jTextrollno.getText());
                         rss = stt.executeQuery();
                 while(rss.next())
                 {
                 flag=rss.getString("FLAG");
                 log=rss.getString("DAY"+flag);
                 
                 }
                    } catch (SQLException ex) {
                        Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                

                    st = conn.prepareStatement("select * from subject where year = ? and  semester= ?  ");
                    st.setString(1, "2nd year");
                    st.setString(2, "2nd semester");

                    ResultSet rs = st.executeQuery();
                    while(rs.next())
                    {   if(rs.getString(6).equals("1"))
                    {
                        jLabels1.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels1.setText(sub);

                    }
                       if(rs.getString(6).equals("2"))
                    {
                        jLabels2.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels2.setText(sub);

                    }
                       if(rs.getString(6).equals("3"))
                    {
                        jLabels3.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels3.setText(sub);

                    }
                       if(rs.getString(6).equals("4"))
                    {
                        jLabels4.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels4.setText(sub);

                    }
                       if(rs.getString(6).equals("5"))
                    {
                        jLabels5.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels5.setText(sub);

                    }
                       if(rs.getString(6).equals("6"))
                    {
                        jLabels6.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels6.setText(sub);

                    }
                    
                    
                    

                }
                }
                    catch (SQLException ex) {
                    Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
        if(jComboBoxyear.getSelectedItem().equals("3ed year"))
        {
            if(jComboBoxsem.getSelectedItem().equals("1st semester"))
            {

                try {
                    

                     Connection conn=C.setconnection();
                    PreparedStatement st,stt;
                    ResultSet rss;
                    log="31";
                     try {
                        stt = conn.prepareStatement("select * from attendance31 where roll_no=?");
                        stt.setString(1,jTextrollno.getText());
                         rss = stt.executeQuery();
                 while(rss.next())
                 {
                 flag=rss.getString("FLAG");
                 log=rss.getString("DAY"+flag);
                 
                 }
                    } catch (SQLException ex) {
                        Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                

                    st = conn.prepareStatement("select * from subject where year = ? and  semester= ?  ");
                    st.setString(1, "3ed year");
                    st.setString(2, "1st semester");

                    ResultSet rs = st.executeQuery();
                    while(rs.next())
                    {   if(rs.getString(6).equals("1"))
                    {
                        jLabels1.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels1.setText(sub);

                    }
                       if(rs.getString(6).equals("2"))
                    {
                        jLabels2.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels2.setText(sub);

                    }
                       if(rs.getString(6).equals("3"))
                    {
                        jLabels3.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels3.setText(sub);

                    }
                       if(rs.getString(6).equals("4"))
                    {
                        jLabels4.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels4.setText(sub);

                    }
                       if(rs.getString(6).equals("5"))
                    {
                        jLabels5.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels5.setText(sub);

                    }
                       if(rs.getString(6).equals("6"))
                    {
                        jLabels6.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels6.setText(sub);

                    }
                    
                    
                    

                }
                }
                    catch (SQLException ex) {
                    Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                try {
                   

                     Connection conn=C.setconnection();
                    PreparedStatement st,stt;
                    ResultSet rss;
                    log="32";
                     try {
                        stt = conn.prepareStatement("select * from attendance32 where roll_no=?");
                        stt.setString(1,jTextrollno.getText());
                         rss = stt.executeQuery();
                 while(rss.next())
                 {
                     
                 flag=rss.getString("FLAG");
                 log=rss.getString("DAY"+flag);
                 
                 }
                    } catch (SQLException ex) {
                        Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                

                    st = conn.prepareStatement("select * from subject where year = ? and  semester= ?  ");
                    st.setString(1, "3ed year");
                    st.setString(2, "2nd semester");

                    ResultSet rs = st.executeQuery();
                    while(rs.next())
                    {   if(rs.getString(6).equals("1"))
                    {
                        jLabels1.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels1.setText(sub);

                    }
                       if(rs.getString(6).equals("2"))
                    {
                        jLabels2.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels2.setText(sub);

                    }
                       if(rs.getString(6).equals("3"))
                    {
                        jLabels3.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels3.setText(sub);

                    }
                       if(rs.getString(6).equals("4"))
                    {
                        jLabels4.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels4.setText(sub);

                    }
                       if(rs.getString(6).equals("5"))
                    {
                        jLabels5.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels5.setText(sub);

                    }
                       if(rs.getString(6).equals("6"))
                    {
                        jLabels6.removeAll();
                        String sub=rs.getString("SUBJECT");
                        jLabels6.setText(sub);

                    }
                    
                    
                    

                }
                }
                    catch (SQLException ex) {
                    Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
         Connection conn=C.setconnection();
         Statement st=null;
       
        if(log.equals("111111"))
        {
            a.setSelected(true);
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("111110"))
        {
            a.setSelected(true);
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("111101"))
        {
            a.setSelected(true);
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("111100"))
        {
            a.setSelected(true);
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
           
        }
        if(log.equals("111010"))
        {
            a.setSelected(true);
            b.setSelected(true);
            c.setSelected(true);
            
            e.setSelected(true);
            
            
        }
        if(log.equals("111001"))
        {
            a.setSelected(true);
            b.setSelected(true);
            c.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("111000"))
        {
            a.setSelected(true);
            b.setSelected(true);
            c.setSelected(true);
            
            
        }
         if(log.equals("011111"))
        {
            
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("011110"))
        {
           
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("011101"))
        {
            
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("011100"))
        {
           
            b.setSelected(true);
            c.setSelected(true);
            d.setSelected(true);
           
        }
        if(log.equals("011010"))
        {
            
            b.setSelected(true);
            c.setSelected(true);
            
            e.setSelected(true);
            
            
        }
        if(log.equals("011001"))
        {
           
            b.setSelected(true);
            c.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("011000"))
        {
           
            b.setSelected(true);
            c.setSelected(true);
            
            
        }
      
        
        
        
        
        
        
        
        
        if(log.equals("110111"))
        {
            a.setSelected(true);
            b.setSelected(true);
           
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("110110"))
        {
            a.setSelected(true);
            b.setSelected(true);
            
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("110101"))
        {
            a.setSelected(true);
            b.setSelected(true);
           
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("110100"))
        {
            a.setSelected(true);
            b.setSelected(true);
            
            d.setSelected(true);
           
        }
        if(log.equals("110010"))
        {
            a.setSelected(true);
            b.setSelected(true);
            
            
            e.setSelected(true);
            
            
        }
        if(log.equals("110001"))
        {
            a.setSelected(true);
            b.setSelected(true);
            
            
            f.setSelected(true);
            
        }
        if(log.equals("110000"))
        {
            a.setSelected(true);
            b.setSelected(true);
            
            
            
        }
         if(log.equals("010111"))
        {
            
            b.setSelected(true);
            
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("010110"))
        {
           
            b.setSelected(true);
            
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("010101"))
        {
            
            b.setSelected(true);
            
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("010100"))
        {
           
            b.setSelected(true);
            
            d.setSelected(true);
           
        }
        if(log.equals("010010"))
        {
            
            b.setSelected(true);
            
            
            e.setSelected(true);
            
            
        }
        if(log.equals("010001"))
        {
           
            b.setSelected(true);
            
            
            f.setSelected(true);
            
        }
        if(log.equals("010000"))
        {
           
            b.setSelected(true);
           
            
            
        }
        if(log.equals("10111"))
        {
            a.setSelected(true);
            
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("101110"))
        {
            a.setSelected(true);
            
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("101101"))
        {
            a.setSelected(true);
            
            c.setSelected(true);
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("101100"))
        {
            a.setSelected(true);
            
            c.setSelected(true);
            d.setSelected(true);
           
        }
        if(log.equals("101010"))
        {
            a.setSelected(true);
            
            c.setSelected(true);
            
            e.setSelected(true);
            
            
        }
        if(log.equals("101001"))
        {
            a.setSelected(true);
            
            c.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("101000"))
        {
            a.setSelected(true);
            
            c.setSelected(true);
            
            
        }
         if(log.equals("001111"))
        {
            
            
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("001110"))
        {
           
            
            c.setSelected(true);
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("001101"))
        {
            
           
            c.setSelected(true);
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("001100"))
        {
           
            
            c.setSelected(true);
            d.setSelected(true);
           
        }
        if(log.equals("001010"))
        {
            
            
            c.setSelected(true);
            
            e.setSelected(true);
            
            
        }
        if(log.equals("001001"))
        {
           
           
            c.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("001000"))
        {
           
            
            c.setSelected(true);
            
            
        }
      
        
        
        
        
        
        
        
        
        if(log.equals("100111"))
        {
            a.setSelected(true);
            
           
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("100110"))
        {
            a.setSelected(true);
            
            
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("100101"))
        {
            a.setSelected(true);
           
           
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("100100"))
        {
            a.setSelected(true);
            
            
            d.setSelected(true);
           
        }
        if(log.equals("100010"))
        {
            a.setSelected(true);
            
            
            
            e.setSelected(true);
            
            
        }
        if(log.equals("100001"))
        {
            a.setSelected(true);
            
            
            
            f.setSelected(true);
            
        }
        if(log.equals("100000"))
        {
            a.setSelected(true);
            
            
            
            
        }
         if(log.equals("000111"))
        {
            
            
            
            d.setSelected(true);
            e.setSelected(true);
            f.setSelected(true);
            
        }
        if(log.equals("000110"))
        {
           
           
            
            d.setSelected(true);
            e.setSelected(true);
            
            
        }
        if(log.equals("000101"))
        {
            
           
            
            d.setSelected(true);
            
            f.setSelected(true);
            
        }
        if(log.equals("000100"))
        {
           
            
            
            d.setSelected(true);
           
        }
        if(log.equals("000010"))
        {
            
            
            
            
            e.setSelected(true);
            
            
        }
        if(log.equals("000001"))
        {
           
            
            
            
            f.setSelected(true);
            
        }
        if(log.equals("000000"))
        {
           
           
           
            
            
        }
      
      
        
       
             
              
                    
           
           } 
 
       
        
        
            
        

    }//GEN-LAST:event_jButtongoMouseClicked

    private void jButtongoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongoActionPerformed

    }//GEN-LAST:event_jButtongoActionPerformed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void jCheckBoxpresentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxpresentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxpresentActionPerformed

    private void jComboBoxsemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxsemMouseReleased
       
        
        
    }//GEN-LAST:event_jComboBoxsemMouseReleased

    private void jComboBoxsemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxsemMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxsemMouseExited

    private void jTextrollnoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextrollnoMouseReleased
 
        Connection2DB C=new Connection2DB();
        
        java.util.Date date=null;
         date =new java.util.Date();  
         SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");//Pick the Current System Date
         String dates=sdf.format(date); 
    
        
         
        if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {
       
        try {                     
        Connection conn=C.setconnection();
        PreparedStatement st;    
        
        st = conn.prepareStatement("select * from DaytoDates1 ");
        
    
    ResultSet rs = st.executeQuery();
    jComboBoxdate.removeAllItems();
    while(rs.next())
    {
       
        String sub=rs.getString("Date");
        if(sub.equals(dates))
        {
             jComboBoxdate.addItem("Today");
        }
        else
        {
        jComboBoxdate.addItem(sub);
        }
                
    }
            
        } catch (SQLException ex) {
            Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
        }
           }
        else
        {
       
        try {                     
        Connection conn=C.setconnection();
        PreparedStatement st;    
        
        st = conn.prepareStatement("select * from DaytoDates2 ");
        
    
    ResultSet rs = st.executeQuery();
    jComboBoxdate.removeAllItems();
    while(rs.next())
    {
       
        String sub=rs.getString("Date");
        if(sub.equals(dates))
        {
             jComboBoxdate.addItem("Today");
        }
        else
        {
        jComboBoxdate.addItem(sub);
        }
                
    }
            
        } catch (SQLException ex) {
            Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
        }
           }
    }//GEN-LAST:event_jTextrollnoMouseReleased

    private void jButtonsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonsaveMouseClicked
        Connection2DB C=new Connection2DB();
        Connection conn=C.setconnection();
        String flag=null;
        if(jComboBoxyear.getSelectedItem().equals("1st year"))
         {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {
               flag="11";
           }
            else
            {    
                flag="12";

            }
        }
                if(jComboBoxyear.getSelectedItem().equals("2nd year"))
         {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {
               flag="21";
           }
            else
            {
                flag="22";
            }
        }
                        if(jComboBoxyear.getSelectedItem().equals("3ed year"))
         {
           if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {
               flag="31";
           }
            else
            {
                flag="32";
            }
        }
        int tag=0;
        String var=null;
        tag=jComboBoxdate.getSelectedIndex();
        tag++;
        PreparedStatement stt;
        String sqlst="select * from attendance"+flag;
         
        try {
            stt=conn.prepareStatement(sqlst);
            ResultSet rst=stt.executeQuery();
            while(rst.next())
            {
                switch(rst.getString("Day"+tag))
                {
                    case "111110":var="111110";
                    break;
                    case "011111":var="011111";
                    break;
                    case "101111":var="101111";
                    break;
                    case "110111":var="110111";
                    break;
                    case "111011":var="111011";
                    break;
                    case "111101":var="111101";
                    break;
                    default:
                        break;
                }
                break;
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        PreparedStatement st;    
        String sql="select * from attendance"+flag;
        String k=null;
        try { 
            st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            while (rs.next())
            {JOptionPane.showMessageDialog(null,k,"Successfull",JOptionPane.ERROR_MESSAGE ); 
               k=rs.getString("Day"+tag);
                if("0".equals(k))
                {
                   JOptionPane.showMessageDialog(null,var,"Successfull",JOptionPane.ERROR_MESSAGE ); 
                    if(jCheckBoxpresent.isSelected())
                    {
                         String sqls;
                     sqls="UPDATE attendance"+flag+" SET Day"+tag+"=? WHERE Day"+tag+"=?";
            PreparedStatement pst=conn.prepareStatement(sqls);
            pst.setString(1,var);
            pst.setString(2,"0");
            
           
            pst.executeUpdate();    
            
                        //111111
                        
                    }
                    else
                    {
                           String sqls;
                     sqls="UPDATE attendance"+flag+" SET Day"+tag+"=? WHERE Day"+tag+"=?";
            PreparedStatement pst=conn.prepareStatement(sqls);
            pst.setString(1,"000000");
            pst.setString(2,"0");
            
           
            pst.executeUpdate();
                        //000000
                        }
                }
                else
                {
                   //JOptionPane.showMessageDialog(null,k,"Successfull",JOptionPane.ERROR_MESSAGE );
                }
                
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(AttendanceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
                 

        
    }//GEN-LAST:event_jButtonsaveMouseClicked

    private void jButtonsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonsaveActionPerformed

    private void jLabelsignoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelsignoutMouseClicked
        // TODO add your handling code here:
        LogoutForm ltf=new LogoutForm();
        ltf.setVisible(true);
        ltf.pack();
        ltf.setLocationRelativeTo(null);//to make center on screen
        ltf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    }//GEN-LAST:event_jLabelsignoutMouseClicked

    private void jLabelattendance3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelattendance3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelattendance3MouseClicked

    private void jComboBoxdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxdateMouseClicked
                                          
 
        Connection2DB C=new Connection2DB();
        jComboBoxdate.removeAllItems();
        java.util.Date date=null;
         date =new java.util.Date();  
         SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");//Pick the Current System Date
         String dates=sdf.format(date); 
    
        
         
        if(jComboBoxsem.getSelectedItem().equals("1st semester"))
           {
       
        try {                     
        Connection conn=C.setconnection();
        PreparedStatement st;    
        
        st = conn.prepareStatement("select * from DaytoDates1 ");
        
    
    ResultSet rs = st.executeQuery();
    jComboBoxdate.removeAllItems();
    while(rs.next())
    {
       
        String sub=rs.getString("Date");
        if(sub.equals(dates))
        {
             jComboBoxdate.addItem("Today");
        }
        else
        {
        jComboBoxdate.addItem(sub);
        }
                
    }
            
        } catch (SQLException ex) {
            Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
        }
           }
        else
        {
       
        try {                     
        Connection conn=C.setconnection();
        PreparedStatement st;    
        
        st = conn.prepareStatement("select * from DaytoDates2 ");
        
    
    ResultSet rs = st.executeQuery();
    
    while(rs.next())
    {
       
        String sub=rs.getString("Date");
        if(sub.equals(dates))
        {
             jComboBoxdate.addItem("Today");
        }
        else
        {
        jComboBoxdate.addItem(sub);
        }
                
    }
            
        } catch (SQLException ex) {
            Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
        }
           }
    }//GEN-LAST:event_jComboBoxdateMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendanceForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox a;
    private javax.swing.JCheckBox b;
    private javax.swing.JCheckBox c;
    private javax.swing.JCheckBox d;
    private javax.swing.JCheckBox e;
    private javax.swing.JLabel exit;
    private javax.swing.JCheckBox f;
    private javax.swing.JButton jButtonadd;
    private javax.swing.JButton jButtongo;
    private javax.swing.JButton jButtonsave;
    private javax.swing.JButton jButtonview;
    private javax.swing.JCheckBox jCheckBoxpresent;
    private javax.swing.JComboBox<String> jComboBoxdate;
    private javax.swing.JComboBox<String> jComboBoxsem;
    private javax.swing.JComboBox<String> jComboBoxyear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelabout;
    private javax.swing.JLabel jLabelattendance;
    private javax.swing.JLabel jLabelattendance1;
    private javax.swing.JLabel jLabelattendance2;
    private javax.swing.JLabel jLabelattendance3;
    private javax.swing.JLabel jLabellogin;
    private javax.swing.JLabel jLabeloverview;
    private javax.swing.JLabel jLabels1;
    private javax.swing.JLabel jLabels2;
    private javax.swing.JLabel jLabels3;
    private javax.swing.JLabel jLabels4;
    private javax.swing.JLabel jLabels5;
    private javax.swing.JLabel jLabels6;
    private javax.swing.JLabel jLabelsignout;
    private javax.swing.JLabel jLabelstudent;
    private javax.swing.JLabel jLabelsubject;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreafull;
    private javax.swing.JTextArea jTextAreahalf;
    private javax.swing.JTextField jTextrollno;
    private javax.swing.JLabel minimize;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
        Connection2DB C=new Connection2DB();
        
        Connection conn=C.setconnection();
        PreparedStatement st;    
        ResultSet rs=null;
        
        try {
            st = conn.prepareStatement("select * from login where login=? ");
            st.setString(1, "in");  
        
            rs = st.executeQuery(); 
            while(rs.next())
            {
             jLabellogin.setText(rs.getString("Firstname"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void windowClosing(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosed(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowIconified(WindowEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
