/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendence.management.system;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import Classes.Connection2DB;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
/**
 *
 * @author AKHIL REJI
 */

public class Notification extends javax.swing.JFrame implements WindowListener {

    /**
     * Creates new form Notification
     */
    public Notification() {
        initComponents();
        addWindowListener(this);
        this.setLocationRelativeTo(null);
        getRootPane().setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK));
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabellist = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabellists = new javax.swing.JList<>();
        jButtonCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(1, 22, 39));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Name of Students those haven't covered enough attendance are listed below.");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Name of Students those took 3  continous absents   are listed below..");

        jLabellist.setBackground(new java.awt.Color(255, 255, 255));
        jLabellist.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabellist.setForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jLabellist);

        jLabellists.setBackground(new java.awt.Color(255, 255, 255));
        jLabellists.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabellists.setForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(jLabellists);

        jButtonCancel.setBackground(new java.awt.Color(242, 38, 19));
        jButtonCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonCancel.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancel.setText("Back");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Notification");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        StudentForm stf=new StudentForm();
        stf.setVisible(true);
        stf.pack();
        stf.setLocationRelativeTo(null);//to make center on screen
        stf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jLabellist;
    private javax.swing.JList<String> jLabellists;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

   
    public void windowOpened(WindowEvent e) {
       Connection2DB C=new Connection2DB();
        Connection conn=C.setconnection();
        jLabellist.removeAll();
        DefaultListModel dlm=new DefaultListModel();
        DefaultListModel dlms=new DefaultListModel();
        PreparedStatement st;  
        String flag1=null;
        String flag2=null;
        String flag3=null;
        String k;
        int a=0;
        
         try {
            st = conn.prepareStatement("select * from attendance11");
            ResultSet rs = st.executeQuery();
            if(!rs.next())
            {
                k="0";
            }
            else
            {
            k=rs.getString("flag");
            }
            if(k.equals("0") | k.equals("1") | k.equals("2") )
            {
            }
            else{
            while(rs.next())
            {     a=0;
                  flag1=null;
                  flag2=null;
                  flag3=null;
            if (rs.getInt("Class")<= 75)
            {
                dlm.addElement(rs.getString("name")+"-"+rs.getInt("Class")+"%");
                jLabellist.setModel(dlm);
            }
            a=rs.getInt("flag");
            flag1=rs.getString("Day"+a);
            a--;
            flag2=rs.getString("Day"+a);
            a--;
            flag3=rs.getString("Day"+a);
            if(flag1.equals("000000") &&flag2.equals("000000") && flag3.equals("000000"))
            {
                dlms.addElement(rs.getString("name"));
                jLabellists.setModel(dlms);
            }
            
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         try {
            st = conn.prepareStatement("select * from attendance12");
            ResultSet rs = st.executeQuery();
            if(!rs.next())
            {
                k="0";
            }
            else
            {
            k=rs.getString("flag");
            }
            if(k.equals("0") | k.equals("1") | k.equals("2") )
            {
            }
            else{
            while(rs.next())
            {     a=0;
                  flag1=null;
                  flag2=null;
                  flag3=null;
            if (rs.getInt("Class")<= 75)
            {
                dlm.addElement(rs.getString("name")+"-"+rs.getInt("Class")+"%");
                jLabellist.setModel(dlm);
            }
            a=rs.getInt("flag");
            flag1=rs.getString("Day"+a);
            a--;
            flag2=rs.getString("Day"+a);
            a--;
            flag3=rs.getString("Day"+a);
            if(flag1.equals("000000") &&flag2.equals("000000") && flag3.equals("000000"))
            {
                dlms.addElement(rs.getString("name"));
                jLabellists.setModel(dlms);
            }
            
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
          try {
            st = conn.prepareStatement("select * from attendance21");
            ResultSet rs = st.executeQuery();
         if(!rs.next())
            {
                k="0";
            }
            else
            {
            k=rs.getString("flag");
            }
            if(k.equals("0") | k.equals("1") | k.equals("2"))
            {
            }
            else{
            while(rs.next())
            {     a=0;
                  flag1=null;
                  flag2=null;
                  flag3=null;
            if (rs.getInt("Class")<= 75)
            {
                dlm.addElement(rs.getString("name")+"-"+rs.getInt("Class")+"%");
                jLabellist.setModel(dlm);
            }
            a=rs.getInt("flag");
            flag1=rs.getString("Day"+a);
            a--;
            flag2=rs.getString("Day"+a);
            a--;
            flag3=rs.getString("Day"+a);
            if(flag1.equals("000000") &&flag2.equals("000000") && flag3.equals("000000"))
            {
                dlms.addElement(rs.getString("name"));
                jLabellists.setModel(dlms);
            }
            
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try {
            st = conn.prepareStatement("select * from attendance22");
            ResultSet rs = st.executeQuery();
          if(!rs.next())
            {
                k="0";
            }
            else
            {
            k=rs.getString("flag");
            }
            if(k.equals("0") | k.equals("1") | k.equals("2") )
            {
            }
            else{
            while(rs.next())
            {     a=0;
                  flag1=null;
                  flag2=null;
                  flag3=null;
            if (rs.getInt("Class")<= 75)
            {
                dlm.addElement(rs.getString("name")+"-"+rs.getInt("Class")+"%");
                jLabellist.setModel(dlm);
            }
            a=rs.getInt("flag");
            flag1=rs.getString("Day"+a);
            a--;
            flag2=rs.getString("Day"+a);
            a--;
            flag3=rs.getString("Day"+a);
            if(flag1.equals("000000") &&flag2.equals("000000") && flag3.equals("000000"))
            {
                dlms.addElement(rs.getString("name"));
                jLabellists.setModel(dlms);
            }
            
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
          try {
            st = conn.prepareStatement("select * from attendance31");
            ResultSet rs = st.executeQuery();
         if(!rs.next())
            {
                k="0";
            }
            else
            {
            k=rs.getString("flag");
            }
            if(k.equals("0") | k.equals("1") | k.equals("2") )
            {
            }
            else{
            while(rs.next())
            {     a=0;
                  flag1=null;
                  flag2=null;
                  flag3=null;
            if (rs.getInt("Class")<= 75)
            {
                dlm.addElement(rs.getString("name")+"-"+rs.getInt("Class")+"%");
                jLabellist.setModel(dlm);
            }
            a=rs.getInt("flag");
            flag1=rs.getString("Day"+a);
            a--;
            flag2=rs.getString("Day"+a);
            a--;
            flag3=rs.getString("Day"+a);
            if(flag1.equals("000000") &&flag2.equals("000000") && flag3.equals("000000"))
            {
                dlms.addElement(rs.getString("name"));
                jLabellists.setModel(dlms);
            }
            
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
          try {
            st = conn.prepareStatement("select * from attendance32");
            ResultSet rs = st.executeQuery();
          if(!rs.next())
            {
                k="0";
            }
            else
            {
            k=rs.getString("flag");
            }
            if(k.equals("0") | k.equals("1") | k.equals("2") )
            {
            }
            else{
            while(rs.next())
            {     a=0;
                  flag1=null;
                  flag2=null;
                  flag3=null;
            if (rs.getInt("Class")<= 75)
            {
                dlm.addElement(rs.getString("name")+"-"+rs.getInt("Class")+"%");
                jLabellist.setModel(dlm);
            }
            a=rs.getInt("flag");
            flag1=rs.getString("Day"+a);
            a--;
            flag2=rs.getString("Day"+a);
            a--;
            flag3=rs.getString("Day"+a);
            if(flag1.equals("000000") &&flag2.equals("000000") && flag3.equals("000000"))
            {
                dlms.addElement(rs.getString("name"));
                jLabellists.setModel(dlms);
            }
            
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
       
    }

    @Override
    public void windowClosing(WindowEvent e) {
       
    }

    @Override
    public void windowClosed(WindowEvent e) {
        }

    @Override
    public void windowIconified(WindowEvent e) {
        }

    @Override
    public void windowDeiconified(WindowEvent e) {
        }

    @Override
    public void windowActivated(WindowEvent e) {
        }

    @Override
    public void windowDeactivated(WindowEvent e) {
        }

    
}
